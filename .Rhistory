?debug
library(datasets)
data(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
set.seed(1)
rpois(5, 2)
my_var <- rpois(5, 2)
class(my_var)
unclass(my_var)
my_var
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
my_var <- rpois(5, 2)
my_var
?rnorm
?pnorm
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
r
e
y
?rbinom
setwd("~/Dropbox/R")
list.files()
setwd("~/Dropbox/R/quiz 3")
list.files()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "idaho.csv", "curl")
idaho <- read.csv("idaho.csv", header = TRUE, sep=",")
head(idaho)
names(idaho)
idaho <- tbl_df(idaho)
library(dplyr)
idaho <- tbl_df(idaho)
idaho
names(idaho)
idaho$ACR
idaho$ACR == 3
idaho$ACR == 3 & idaho$AGS == 6
agricultureLogical <- idaho$ACR == 3 & idaho$AGS == 6
?which
which(idaho, agricultureLogical)
idaho <- read.csv("idaho.csv", header = TRUE, sep=",")
agricultureLogical <- idaho$ACR == 3 & idaho$AGS == 6
agricultureLogical
which(idaho, agricultureLogical)
agricultureLogical <- na.omit(idaho$ACR == 3 & idaho$AGS == 6)
agricultureLogical
which(idaho, agricultureLogical)
which(agricultureLogical)
which(agricultureLogical)[1:3]
agricultureLogical <- (idaho$ACR == 3 & idaho$AGS == 6)
agricultureLogical
which(agricultureLogical)[1:3]
which(agricultureLogical)[1:3]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode = "wb")
download.file(url, f, mode = "curl")
download.file(url, f, mode = "wb", "curl")
img <- readJPEG(f, native = TRUE)
?readJPEG
??readJPEG
library(jpeg)
install.packages("jpeg")
library(jpeg)
img <- readJPEG(f, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "edu.csv", "curl")
gdp <- read.csv("gdp.csv", header = TRUE, sep=",")
head(gdp)
gpd$X
gdp$X
gdp$X[1:3]
head(gdp$X,2)
edu <- read.csv("edu.csv", header = TRUE, sep=",")
head(edu)
intersected_data <- gdp$X == edu$CountryCode
dim(gdp)
dim(edu)
intersected_data <- edu$CountryCode == gdp$X
intersect(gdp$X, edu$CountryCode)
intersected_data <- intersect(gdp$X, edu$CountryCode)
dim(intersected_data)
str(intersected_data)
head(edu)
head(gpd)
head(gdp)
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
head(gdp)
str(intersected_data)
intersected_data <- intersect(gdp$X, edu$CountryCode)
str(intersected_data)
unique(intersected_data)
str(unique(intersected_data))
head(gdp[order(gdp$X.3, na.last = NA, decreasing=TRUE),])
head(gdp[order(gdp$X.3, na.last = NA, decreasing=TRUE),],13)
merge(gdp, edu, by = "X")
names(edu)
colnames(edu)[1] <- "X"
names(edu)
merge(gdp, edu, by = "X")
merged_data <- merge(gdp, edu, by = "X")
dim(merged_data)
head(merged_data)
names(gdp)
head(gdp)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
na.omit(gdp)
na.omit(gdp$X)
na(gdp$X)
is.na(gdp$X)
sum(is.na(gdp$X))
gdp <- gdp[X != ""]
gdp <- gdp[X != ""]
head(gdp)
gdp[gdp$X != ""]
gdp$X != ""
which(gdp$X != "")
gdp <- which(gdp$X != "")
dgp
gdp
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp[which(gdp$X != "")]
gdp[X == which(gdp$X != "")]
gdp[, which(gdp$X != "")]
gdp[which(gdp$X != ""),1]
gdp[which(gdp$X != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
isNA(ed[1,])
is.NA(ed[1,])
is.na(ed[1,])
is.na(edu[1,])
is.na(edu[,1])
sum(is.na(edu[,1]))
gdp[gdp$X != ""]
which(gdp$X != "")
which(edu$CountryCode != "")
colnames(edu)[1] <- "X"
head(edu)
merge(gdp, edu, by = X )
merge(gdp, edu, by = "X" )
merged_data <- merge(gdp, edu, by = "X" )
dim(merged_data)
merged_data <- merge(gdp, edu, all = TRUE, by = c("X") )
dim(merged_data)
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
> gdp <- gdp[which(gdp$X != ""),]
> edu <- read.csv("edu.csv", header = TRUE, sep=",")
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
head(gdp)
dim(gdp)
unique(gdp$CountryCode)
str(unique(gdp$CountryCode))
merged_data <- merge(gdp, edu, all = TRUE, by = c("CountryCode") )
dim(merged_data)
head(merged_data)
names(merged_data)
merged_data[1,]
merged_data[,1]
unique(merged_data[,1])
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
dim(gdp)
tail(gdp)
gdp <- gdp[which(gdp$X != ""),]
tail(gdp)
tail(gdp,50)
dim(gdp[which(gdp$X.1 != ""),])
gdp <- gdp[which(gdp$X.1 != ""),]
tail(gdp,50)
colnames(gdp)[1] <- "CountryCode"
merged_data <- merge(gdp, edu, all = TRUE, by = c("CountryCode") )
merged_data
dim(merged_data)
sum(!is.na(unique(merged_data$X.1)))
merged_data[order(merged_data[,2]), decreasing = TRUE]
merged_data[order(merged_data[,2], decreasing = TRUE)]
merged_data[order(merged_data[,2], decreasing = TRUE),]
merged_data[order(merged_data[,2], decreasing = TRUE),][13]
merged_data[order(merged_data[,2], decreasing = TRUE),]
head(merged_data[order(merged_data[,2], decreasing = TRUE),])
head(merged_data[order(merged_data[,2], decreasing = TRUE), list(Long.Name.x)])
head(merged_data[order(merged_data[,2], decreasing = TRUE), list(Long.Name.X)])
head(merged_data[order(merged_data[,2], decreasing = TRUE), list(Long.Name.X)])
merged_data[order(gdp, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
head(gdp)
order(merged_data)
order(merged_data, decreasing = TRUE)
merged_data[order(merged_data, decreasing = TRUE)]
merged_data[order(merged_data, decreasing = TRUE), ]
head(merged_data[order(merged_data, decreasing = TRUE), ])
merged_data <- merge(gdp, edu, all = false, by = c("CountryCode") )
merged_data <- merge(gdp, edu, all = FALSE, by = c("CountryCode") )
head(merged_data[order(merged_data, decreasing = TRUE), ])
merged_data[order(X.1, decreasing = TRUE), List(CountryCode, Long.Name.x, Long.Name.y, X.1, X.4)][13]
merged_data[order(X.1, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, X.1, X.4)][13]
merged_data[order(X.1, decreasing = TRUE), ][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), ][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, X.1, X.4)][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), list(merged_data$CountryCode, Long.Name.x, Long.Name.y, X.1, X.4)][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), list(merged_data$CountryCode, merged_data$Long.Name.x, merged_data$Long.Name.y, merged_data$X.1, merged_data$X.4)][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), list(merged_data$CountryCode)][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), ][13]
merged_data[order(merged_data$X.1, decreasing = TRUE), ]
head(merged_data[order(merged_data$X.1, decreasing = TRUE), ])
head(merged_data[order(merged_data$X.1, decreasing = TRUE), ],13)
head(gdp)
gdp[order(X.1[,2]), ]
gdp[order(gdp$X.1[,2]), ]
gdp[order(gdp$X.1), ]
gdp[order(gdp$X.1), ][1:13,]
gdp[order(gdp$X.1, descreasing = TRUE), ][1:13,]
gdp[order(gdp$X.1, descreasing = TRUE), ][1:13,]
order(gdp$X.1, descreasing = TRUE)
order(gdp$X.1, descreasing = TRUE)
dtGDP <- data.table(read.csv("gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtEd <- data.table(read.csv("edu.csv"))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dtGDP <- read.csv("gdp.csv", skip = 4, nrows = 215)
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtEd <- read.csv("edu.csv")
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
?data.table
??data.table
library(data.table)
dtGDP <- data.table(read.csv("gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtEd <- data.table(read.csv("edu.csv"))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
merged_data <- merge(gdp, edu, all = false, by = c("CountryCode") )
sum(!is.na(unique(merged_data$X.1)))
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
merged_data <- merge(gdp, edu, by = c("CountryCode") )
sum(!is.na(unique(merged_data$X.1)))
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
merged_data <- merge(gdp, edu, all = TRUE, by = c("CountryCode") )
sum(!is.na(unique(merged_data$X.1)))
gdprankings <- read.csv('gdp.csv', skip=4, stringsAsFactors = FALSE)
# Remove empty cols and ammend colnames
gdprankings[,3] <- gdprankings[,6] <- gdprankings[,7] <- gdprankings[,8] <- gdprankings[,9] <- gdprankings[,10]  <- NULL
colnames(gdprankings) <- c("abbreviation", "ranking", "economy", "gdp")
gdprankings <- gdprankings[gdprankings$abbreviation != "", ] # Remove entries w/ no abbreviation
gdprankings <- gdprankings[1:190,] ## Remove regions - just keep countries
gdprankings[,2] <- as.numeric(gdprankings[,2])
gdprankings[,4] <- gsub(",", "", gdprankings[,4]) # Remove "," to allow coercion
gdprankings[,4] <- as.integer(gdprankings[,4])
gdprankings <- gdprankings[order(gdp[,2]), ] ## Order by "gdp" descending
gdprankings[1:13,]
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
merged_data <- merge(gdp, edu, all = TRUE, by = c("CountryCode") )
sum(!is.na(unique(merged_data$X.1)))
?order
library(dplyr)
arrange(gdp, desc(X.1))
(arrange(gdp, desc(X.1)))[13]
(arrange(gdp, desc(X.1)))[13,]
head(arrange(gdp, desc(X.1)))
head(arrange(gdp, desc(X.1)),13)
head(arrange(merged_data, desc(X.1)),13)
head(gdp)
colnames(gdp)[2] <- "Rank"
head(gdp)
head(arrange(gdp, desc(Rank)),13)
gdp <- tbl_df(gdp)
head(arrange(gdp, desc(Rank)),13)
head(gdp)
(arrange(gdp, desc(Rank))
)
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
colnames(gdp)[2] <- "Rank"
merged_data <- merge(gdp, edu, all = TRUE, by = c("CountryCode") )
sum(!is.na(unique(merged_data$X.1)))
gdp <- read.csv("gdp.csv", skip=4, header = TRUE, sep=",")
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
colnames(gdp)[2] <- "Rank"
merged_data <- merge(gdp, edu, all = TRUE, by = c("CountryCode") )
sum(!is.na(unique(merged_data$Rank)))
library(data.table)
gdp <- data.table(gdp)
?order
order(Rank, decreasing = TRUE)
gdp[order(Rank, decreasing = TRUE)]
head(gdp[order(Rank, decreasing = TRUE)],13)
?mutate
mutate(gdp, Rank = Rank * 1)
library(dplyr)
gdp <- tbl_df(read.csv("gdp.csv", skip=4, header = TRUE, sep=","))
gdp
arrange(gdp, desc(X.1))
arrange(gdp, desc(X.2))
arrange(gdp, desc(X.1))
library(dplyr)
gdp <- tbl_df(read.csv("gdp.csv", skip=4, header = TRUE, sep=","))
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
colnames(gdp)[2] <- "Rank"
gdp
arrange(gdp, desc(Rank))
is.na(gdp$Rank)
sum(is.na(gdp$Rank))
sum(!is.na(gdp$Rank))
gdp$Rank
transform(gdp, rank_1 = Rank * 1)
library(dplyr)
gdp <- tbl_df(read.csv("gdp.csv", skip=4, header = TRUE, sep=","))
gdp <- gdp[which(gdp$X != ""),]
gdp <- gdp[which(gdp$X.1 != ""),]
edu <- read.csv("edu.csv", header = TRUE, sep=",")
colnames(gdp)[1] <- "CountryCode"
colnames(gdp)[2] <- "Rank"
gdp <- as_data_frame(gdp)
gdp$Rank
gdp$Rank[1]
gdp[1]
gdp[,1]
gdp[1]
gdp[1,]
gdp[190,]
dim(gdp)
gdp[191,]
gdp[192,]
gdp[189,]
gdp[1:190,]
gdp[1:190,Rank]
gdp[1:190, 1:2]
gdp[1:190, 2]
sum(gdp[1:190, 2])
tmp <- gdp[1:190, 2]
str(tmp)
tmp
tmp.Rank
tmp$Rank
dim(tmp)
tmp
select(tmp, contains("Not"))
select(tmp, contains("not"))
select(tmp, contains("n"))
library(data.table)
dtGDP <- data.table(read.csv("gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtEd <- data.table(read.csv("edu.csv"))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][1:13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][1:15]
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
dt[, mean(rankingGDP), by = Income.Group]
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
summarize(dt)
str(dt)
dt
quantile(dt$rankingGDP)
quantile(dt$rankingGDP, na.rm = TRUE)
quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
names(dt)
table(dt$Income.Group)
table(dt$Income.Group)
quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
quantiles <- quantile(x = dt$rankingGDP, probs=c(0.2,0.4,0.6,0.8,1))
topQuantileRange <- quantiles[4]
data <- dt[dt$Income.Group=="Lower middle income" & dt$rankingGDP > topQuantileRange,]
ans <- nrow(data)
quantiles <- quantile(x = dt$rankingGDP, probs=c(0.2,0.4,0.6,0.8,1))
quantiles <- quantile(x = dt$rankingGDP, probs=c(0.2,0.4,0.6,0.8,1), na.rm = TRUE)
quantiles
quantiles <- quantile(x = dt$rankingGDP, probs=c(0,0.2,0.4,0.6,0.8,1), na.rm = TRUE)
quantiles
topQuantileRange <- quantiles[5]
data <- dt[dt$Income.Group=="Lower middle income" & dt$rankingGDP > topQuantileRange,]
data
ans <- nrow(data)
ans
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
breaks
library(Hmisc)
load.library(Hmisc)
install.packages(Hmisc)
?Hmisc
??Hmisc
install.packages("Hmisc")
library(Hmisc)
matchedData$Rank.Groups = cut2(matchedData$Rank, g = 5)
source('~/Dropbox/R/course project/run_analysis.R')
setwd("~/Dropbox/R/course project")
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
file.path(paste(working_path, data_path, sep=""))
source('~/Dropbox/R/course project/run_analysis.R')
file.path(paste(working_path, data_path, sep=""))
(paste(working_path, data_path, sep="")
)
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
?unzip
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
data_path
test_path
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
test_path
read.table(test_path, "y_test.txt", header = FALSE)
read.table(file.path(test_path, "y_test.txt"), header = FALSE)
source('~/Dropbox/R/course project/run_analysis.R')
source('~/Dropbox/R/course project/run_analysis.R')
install.packages("knitr")
install.packages("markdown")
?knitr
??knitr
tidy_data
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
require(knitr)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
?key
names(tidy_data)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
knit("makeCodebook.Rmd", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)
source('~/development/GettingAndCleaningData/run_analysis.r')
